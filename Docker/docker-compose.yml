version: '3.8'

services:
  postgres:
    image: postgres:15.6
    container_name: postgres_db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password

  keycloak_web:
    image: quay.io/keycloak/keycloak:23.0.7
    container_name: keycloak_web
    volumes:
      - type: bind
        source: ./cfg/keycloak/realm-export-preprod.json
        target: /opt/keycloak/data/import/realm-export.json
        read_only: true
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password

      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: 
      - start-dev
      - --import-realm
    depends_on:
      - postgres
    # ports:
    #   - 8180:8080

  nginx:
    image: nginx:1.27.3-alpine
    restart: always
    depends_on:
      - postgres
      - keycloak_web
      - main-app
    volumes:
      - ./cfg/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
  
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    # ports:
    #   - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    # ports:
    #   - "9092:9092"
    #   - "29092:29092"
    #   - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

  backend_postgres:
    image: postgres:15.6
    container_name: backend_db
    environment:
      POSTGRES_DB: backend_db
      POSTGRES_USER: backend_user
      POSTGRES_PASSWORD: backend_password
    volumes:
      - backend_postgres_data:/var/lib/postgresql/data
    # ports:
    #   - "5432:5432"

  main-app:
    build:
      context: ../Backend/Main-Service
      dockerfile: Dockerfile
    container_name: main-app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://backend_postgres:5432/backend_db
      SPRING_DATASOURCE_USERNAME: backend_user
      SPRING_DATASOURCE_PASSWORD: backend_password
      OAUTH2_URL: http://keycloak_web:8080/realms/my_realm
    depends_on:
      - backend_postgres
      - keycloak_web

  sender-app:
    build:
      context: ../Backend/Sender-Service
      dockerfile: Dockerfile
    container_name: sender-app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://backend_postgres:5432/backend_db
      SPRING_DATASOURCE_USERNAME: backend_user
      SPRING_DATASOURCE_PASSWORD: backend_password
    depends_on:
      - backend_postgres
      - kafka1

volumes:
  postgres_data:
  backend_postgres_data:
